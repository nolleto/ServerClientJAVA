/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import chatserver.ChatServer;
import chatserver.ConnectedClient;
import chatserver.ResponseMessage;
import chatserver.User;
import interfaces.ChatServerEvents;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableColumnModel;

/**
 *
 * @author Felipe
 */
public class TelaGerenciar extends javax.swing.JFrame {
    private ChatServer chatServer;
    /**
     * Creates new form TelaGerenciar
     */
    public TelaGerenciar(ChatServer chatServer) {
        this.chatServer = chatServer;
        initComponents();
        setup();
    }

    private void setup() {
        final DefaultListModel<String> model = new DefaultListModel<String>();
        jListUsers.setModel(model);
                
        chatServer.setChatServerEvents(new ChatServerEvents() {
            @Override
            public void clientConnecting() {
                printLog("Usuário conectando...");
            }

            @Override
            public void clientConnected(ConnectedClient client) {
                String message = String.format("Usuário '%s' connectado", client.getNickname());
                printLog(message);
                
                model.addElement(client.getNickname());
            }

            @Override
            public void clientDisconnected(ConnectedClient client) {
                User user = new User(client.getId(), client.getNickname());
                String userStr = user.toString();
                String message = String.format("%s desconnectado", client.getNickname());
                printLog(message);
                
                model.removeElement(client.getNickname());
                
                for (ConnectedClient c : chatServer.getClients()) {
                    c.sendMessage(new ResponseMessage("userDisconnected", userStr));
                }
            }

            @Override
            public void errorDisconnecting(String nickname) {
                String message = String.format("Não foi possível desconectar o cliente %s", nickname);
                printLog(message);
            }

            @Override
            public void clientPong(ConnectedClient client) {
                String message = String.format("Client %s pong Server.", client.getNickname());
                printLog(message);
            }
        });
             
        jListUsers.addListSelectionListener(new DefaultTableColumnModel(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting() == false) {

                    if (jListUsers.getSelectedIndex() == -1) {
                        jButtonDisconnect.setEnabled(false);

                    } else {
                        jButtonDisconnect.setEnabled(true);
                    }
                }
                super.valueChanged(e); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
    
    private void printLog(String message) {
        String currentText = jTextArea.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/HH/yyyy HH:mm:ss");
        String newError = sdf.format(new Date()) + ": " +  message;
        String newTextToAppend = newError + "\n" + currentText;
        jTextArea.setText(newTextToAppend);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUsers = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonDisconnect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jListUsers);

        jLabel1.setText("Usuários conectados:");

        jButtonDisconnect.setText("Desconectar");
        jButtonDisconnect.setEnabled(false);
        jButtonDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisconnectActionPerformed(evt);
            }
        });

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        jLabel2.setText("Logs:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDisconnect))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDisconnect)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisconnectActionPerformed
        String nickname = jListUsers.getModel().getElementAt(jListUsers.getSelectedIndex());
        chatServer.disconnect(nickname);
    }//GEN-LAST:event_jButtonDisconnectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDisconnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListUsers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
